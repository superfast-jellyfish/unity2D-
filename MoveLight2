Shader "Unlit/MoveLight2"  //颜色直接用原图反相
{
    Properties
    {
        _MainTex ("Texture", 2D) = "white" {}
		_Percent("_Percent",Range(-1.2,0.2))=2    //流光的位置
		_Power("_Power",Range(0,20)) = 2	   
		_Angle("_Angle",Range(0,6.28))=0.5   //流光的方向
    }
    SubShader
    {
        // No culling or depth
        Cull Off ZWrite Off ZTest Always

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag

            #include "UnityCG.cginc"

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv;
                return o;
            }

            sampler2D _MainTex;
			float _Percent;
			float _Power;
			float _Angle;
            fixed4 frag (v2f i) : SV_Target
            {
				float2 tempUV = i.uv;  //流光UV
				float2x2 MAT = {cos(_Angle),sin(_Angle),-sin(_Angle),cos(_Angle)};
				tempUV = mul(MAT, tempUV);
                fixed4 col = tex2D(_MainTex, i.uv);             
				fixed4 y = tempUV.x;
				fixed4 flowCol = y + _Percent;     // (-0.5,0.5)  uv延x轴偏移
				flowCol = abs(flowCol);       // (0.5,0,0.5)
				flowCol = flowCol * _Power;   //( 1,0.09,1)
				flowCol = lerp(1, 0, saturate(flowCol));   //反色（0，0.99，0）
				return  col+fixed4(flowCol.x,0,0,1);  //像素叠加
            }
            ENDCG
        }
    }
}                        
原文链接：https://blog.csdn.net/weixin_36961960/article/details/116138688
